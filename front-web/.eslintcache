[{"D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Catalog\\components\\Loaders\\ProductInfoLoader.tsx":"1","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Auth\\components\\Card\\index.tsx":"2","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Auth\\components\\Login\\index.tsx":"3","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\App.tsx":"4","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Catalog\\components\\Loaders\\ProductDescriptionLoader.tsx":"5","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Admin\\components\\Products\\index.tsx":"6","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Admin\\components\\BaseForm\\index.tsx":"7","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\index.tsx":"8","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Catalog\\components\\ProductDetails\\index.tsx":"9","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\core\\utils\\request.ts":"10","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Catalog\\components\\ProductCard\\index.tsx":"11","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Catalog\\components\\Loaders\\ProductCardLoader.tsx":"12","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\core\\utils\\auth.ts":"13"},{"size":483,"mtime":1612638116859,"results":"14","hashOfConfig":"15"},{"size":379,"mtime":1615515767480,"results":"16","hashOfConfig":"15"},{"size":2314,"mtime":1615603409367,"results":"17","hashOfConfig":"15"},{"size":183,"mtime":1611631195760,"results":"18","hashOfConfig":"15"},{"size":623,"mtime":1612638092028,"results":"19","hashOfConfig":"15"},{"size":622,"mtime":1612728620331,"results":"20","hashOfConfig":"15"},{"size":871,"mtime":1612729918443,"results":"21","hashOfConfig":"15"},{"size":153,"mtime":1611612687581,"results":"22","hashOfConfig":"15"},{"size":2616,"mtime":1612642005419,"results":"23","hashOfConfig":"15"},{"size":1063,"mtime":1615600501916,"results":"24","hashOfConfig":"15"},{"size":619,"mtime":1612637621745,"results":"25","hashOfConfig":"15"},{"size":756,"mtime":1612642484643,"results":"26","hashOfConfig":"15"},{"size":401,"mtime":1615603221741,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l6mmw1",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Catalog\\components\\Loaders\\ProductInfoLoader.tsx",[],"D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Auth\\components\\Card\\index.tsx",[],"D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Auth\\components\\Login\\index.tsx",["57"],"import { Link, useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport ButtonIcon from 'core/components/ButtonIcon';\r\nimport AuthCard from '../Card';\r\nimport './styles.scss';\r\nimport { makeLogin } from 'core/utils/request';\r\nimport { useState } from 'react';\r\nimport { saveSessionData } from 'core/utils/auth';\r\n\r\ntype FormData = {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nconst Login = () => {\r\n    const { register, handleSubmit, errors } = useForm<FormData>();\r\n    const [hasError, setHasError] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const onSubmit = (data: FormData) => {\r\n        makeLogin(data)\r\n            .then(response => {\r\n                setHasError(false);\r\n                saveSessionData(response.data);\r\n                history.push('/admin/');\r\n            })\r\n            .catch(() => {\r\n                setHasError(true);\r\n            })\r\n    }\r\n\r\n    return (\r\n    <AuthCard title=\"login\">\r\n        {hasError && (\r\n            <div className=\"alert alert-danger mt-5\">\r\n            Usuário ou senha inválidos!\r\n        </div>\r\n        )}\r\n        <form className=\"login-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <input                 \r\n                type=\"email\" \r\n                className=\"form-control input-base margin-bottom-30\" \r\n                placeholder=\"Email\"  \r\n                name=\"username\"\r\n                ref={register({ required: true})}  \r\n            />\r\n            <input \r\n                type=\"password\" \r\n                className=\"form-control input-base\" \r\n                placeholder=\"Senha\"    \r\n                name=\"password\"\r\n                ref={register({ required: true})}\r\n            />\r\n            <Link to=\"/admin/auth/recover\" className=\"login-link-recover\">\r\n                Esqueci a senha?\r\n            </Link>\r\n            <div className=\"login-submit\">\r\n                <ButtonIcon text=\"logar\" />\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <span className=\"not-registered\">Não tem Cadastro?</span>\r\n                <Link to=\"/admin/auth/register\" className=\"login-link-register\">\r\n                    CADASTRAR\r\n                </Link>\r\n            </div>\r\n        </form>\r\n    </AuthCard>\r\n    );\r\n}\r\n\r\nexport default Login;","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\App.tsx",[],["58","59"],"D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Catalog\\components\\Loaders\\ProductDescriptionLoader.tsx",[],"D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Admin\\components\\Products\\index.tsx",["60"],"D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Admin\\components\\BaseForm\\index.tsx",[],"D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\index.tsx",[],"D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Catalog\\components\\ProductDetails\\index.tsx",[],"D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\core\\utils\\request.ts",["61"],"import axios, { Method } from 'axios';\r\nimport { log } from 'console';\r\nimport qs from 'qs';\r\nimport { CLIENT_ID, CLIENT_SECRET } from './auth';\r\n\r\ntype RequestParams = {\r\n    method?: Method;\r\n    url: string;\r\n    data?: object | string;\r\n    params?: object;\r\n    headers?: object;\r\n}\r\n\r\ntype LoginData = {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nconst BASE_URL = 'http://localhost:3000';\r\n\r\nexport const makeRequest = ( {method = 'GET', url, data, params, headers} : RequestParams) => {\r\n    return axios({\r\n        method,\r\n        url: `${BASE_URL}${url}`,\r\n        data,\r\n        params,\r\n        headers\r\n    });\r\n}\r\n\r\nexport const makeLogin = (loginData: LoginData) => {\r\n    const token = `${CLIENT_ID}:${CLIENT_SECRET}`\r\n\r\n    const headers = {\r\n        Authorization: `Basic ${window.btoa(token)}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded' \r\n    }\r\n\r\n    const payload = qs.stringify({...loginData, grant_type: 'password'});\r\n\r\n    return makeRequest({url: '/oauth/token', data: payload, method: 'POST', headers});\r\n\r\n}","D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Catalog\\components\\ProductCard\\index.tsx",[],"D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\pages\\Catalog\\components\\Loaders\\ProductCardLoader.tsx",[],"D:\\Projetos\\ws-bootcamp\\dscatalog\\front-web\\src\\core\\utils\\auth.ts",[],{"ruleId":"62","severity":1,"message":"63","line":16,"column":37,"nodeType":"64","messageId":"65","endLine":16,"endColumn":43},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"62","severity":1,"message":"70","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":14},{"ruleId":"62","severity":1,"message":"71","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":13},"@typescript-eslint/no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'Link' is defined but never used.","'log' is defined but never used.","no-global-assign","no-unsafe-negation"]